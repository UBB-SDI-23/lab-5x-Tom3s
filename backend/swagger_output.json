{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation for Boxes app",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "localhost:80",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/boxes": {
      "get": {
        "tags": [
          "Boxes"
        ],
        "description": "Endpoint to get all boxes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returned all Boxes"
          }
        }
      },
      "post": {
        "tags": [
          "Boxes"
        ],
        "description": "Endpoint to create a new box",
        "parameters": [
          {
            "name": "boxes",
            "in": "body",
            "description": "Single Box object or Array of boxes to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "number",
                  "example": 10
                },
                "width": {
                  "type": "number",
                  "example": 10
                },
                "height": {
                  "type": "number",
                  "example": 10
                },
                "material": {
                  "type": "string",
                  "example": "metal"
                },
                "color": {
                  "type": "string",
                  "example": "white"
                }
              },
              "required": [
                "length",
                "width",
                "height",
                "material",
                "color"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/boxes/{id}": {
      "get": {
        "tags": [
          "Boxes"
        ],
        "description": "Endpoint to get a box by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Box id (mongoDB ObjectID String)"
          }
        ],
        "responses": {
          "200": {
            "description": "Box found"
          },
          "404": {
            "description": "Box not found"
          }
        }
      },
      "put": {
        "tags": [
          "Boxes"
        ],
        "description": "Endpoint to update a box",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Box id (mongoDB ObjectID String)",
            "default": "6419faf56b23d736edce7bd6"
          },
          {
            "name": "box",
            "in": "body",
            "description": "Box to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "number",
                  "example": 10
                },
                "width": {
                  "type": "number",
                  "example": 10
                },
                "height": {
                  "type": "number",
                  "example": 10
                },
                "material": {
                  "type": "string",
                  "example": "metal"
                },
                "color": {
                  "type": "string",
                  "example": "white"
                }
              },
              "required": [
                "length",
                "width",
                "height",
                "material",
                "color"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Boxes"
        ],
        "description": "Endpoint to delete a box",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Box id (mongoDB ObjectID String)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/wrappers": {
      "get": {
        "tags": [
          "Wrappers"
        ],
        "description": "Endpoint to get all wrappers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returned all Wrappers"
          }
        }
      },
      "post": {
        "tags": [
          "Wrappers"
        ],
        "description": "Endpoint to create a new wrapper",
        "parameters": [
          {
            "name": "wrapper",
            "in": "body",
            "description": "Wrapper to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "number",
                  "example": 10
                },
                "width": {
                  "type": "number",
                  "example": 10
                },
                "pattern": {
                  "type": "string",
                  "example": "stripes"
                },
                "color": {
                  "type": "string",
                  "example": "white"
                },
                "complementaryColor": {
                  "type": "string",
                  "example": "black"
                }
              },
              "required": [
                "length",
                "width",
                "pattern",
                "color",
                "complementaryColor"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/wrappers/{id}": {
      "get": {
        "tags": [
          "Wrappers"
        ],
        "description": "Endpoint to get a wrapper by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Wrapper id (mongoDB ObjectID String)"
          }
        ],
        "responses": {
          "200": {
            "description": "Wrapper found"
          },
          "404": {
            "description": "Wrapper not found"
          }
        }
      },
      "put": {
        "tags": [
          "Wrappers"
        ],
        "description": "Endpoint to update a wrapper",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Wrapper id (mongoDB ObjectID String)"
          },
          {
            "name": "wrapper",
            "in": "body",
            "description": "Wrapper to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "length": {
                  "type": "number",
                  "example": 10
                },
                "width": {
                  "type": "number",
                  "example": 10
                },
                "pattern": {
                  "type": "string",
                  "example": "stripes"
                },
                "color": {
                  "type": "string",
                  "example": "white"
                },
                "complementaryColor": {
                  "type": "string",
                  "example": "black"
                }
              },
              "required": [
                "length",
                "width",
                "pattern",
                "color",
                "complementaryColor"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Wrappers"
        ],
        "description": "Endpoint to delete a wrapper",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Wrapper id (mongoDB ObjectID String)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/suppliers": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "description": "Endpoint to get all suppliers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returned all Suppliers"
          }
        }
      },
      "post": {
        "tags": [
          "Suppliers"
        ],
        "description": "Endpoint to create a new supplier",
        "parameters": [
          {
            "name": "supplier",
            "in": "body",
            "description": "Supplier to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Supplier Company S.R.L."
                },
                "address": {
                  "type": "string",
                  "example": "Via Roma 1, 10000 Torino"
                },
                "phone": {
                  "type": "string",
                  "example": "555-4200"
                },
                "email": {
                  "type": "string",
                  "example": "company@email.com"
                },
                "wrappers": {
                  "type": "string",
                  "example": ""
                }
              },
              "required": [
                "name",
                "address",
                "phone",
                "email",
                "wrappers"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/suppliers/{id}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "description": "Endpoint to get a supplier by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Supplier id (mongoDB ObjectID String)"
          }
        ],
        "responses": {
          "200": {
            "description": "Supplier found"
          },
          "404": {
            "description": "Supplier not found"
          }
        }
      },
      "put": {
        "tags": [
          "Suppliers"
        ],
        "description": "Endpoint to update a supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Supplier id (mongoDB ObjectID String)"
          },
          {
            "name": "supplier",
            "in": "body",
            "description": "Supplier to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Supplier Company S.R.L."
                },
                "address": {
                  "type": "string",
                  "example": "Via Roma 1, 10000 Torino"
                },
                "phone": {
                  "type": "string",
                  "example": "555-4200"
                },
                "email": {
                  "type": "string",
                  "example": "company@email.com"
                },
                "wrappers": {
                  "type": "string",
                  "example": ""
                }
              },
              "required": [
                "name",
                "address",
                "phone",
                "email",
                "wrappers"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Suppliers"
        ],
        "description": "Endpoint to delete a supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Supplier id (mongoDB ObjectID String)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/suppliers/{id}/{wrapperId}": {
      "put": {
        "tags": [
          "Suppliers"
        ],
        "description": "Endpoint to add a wrapper to a supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Supplier id (mongoDB ObjectID String)"
          },
          {
            "name": "wrapperId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Wrapper id (mongoDB ObjectID String)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/boxes/filter/{size}": {
      "get": {
        "tags": [
          "Boxes"
        ],
        "description": "Endpoint to get boxes larger than the given size",
        "parameters": [
          {
            "name": "size",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Size to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned all boxes larger than the given size"
          }
        }
      }
    },
    "/api/combos": {
      "get": {
        "tags": [
          "Combos"
        ],
        "description": "Endpoint to get all combos",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returned all combos"
          }
        }
      },
      "post": {
        "tags": [
          "Combos"
        ],
        "description": "Endpoint to create a new combo",
        "parameters": [
          {
            "name": "combo",
            "in": "body",
            "description": "Combo to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "wrapperId": {
                  "type": "string",
                  "example": "641a01a58c240448a94767f8"
                },
                "boxId": {
                  "type": "string",
                  "example": "6419faf56b23d736edce7bd6"
                },
                "name": {
                  "type": "string",
                  "example": "Combo 1"
                },
                "price": {
                  "type": "number",
                  "example": 10.99
                }
              },
              "required": [
                "wrapperId",
                "boxId",
                "name",
                "price"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/api/combos/{id}": {
      "get": {
        "tags": [
          "Combos"
        ],
        "description": "Endpoint to get a single combo by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Combo id (mongoDB ObjectID String)"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned a single combo by id"
          },
          "404": {
            "description": "Combo not found"
          }
        }
      },
      "put": {
        "tags": [
          "Combos"
        ],
        "description": "Endpoint to update a combo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Combo id (mongoDB ObjectID String)"
          },
          {
            "name": "combo",
            "in": "body",
            "description": "Combo to update",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "wrapperId": {
                  "type": "string",
                  "example": "641a01a58c240448a94767f8"
                },
                "boxId": {
                  "type": "string",
                  "example": "6419faf56b23d736edce7bd6"
                },
                "name": {
                  "type": "string",
                  "example": "Combo 1"
                },
                "price": {
                  "type": "number",
                  "example": 10.99
                }
              },
              "required": [
                "wrapperId",
                "boxId",
                "name",
                "price"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Combos"
        ],
        "description": "Endpoint to delete a combo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Combo id (mongoDB ObjectID String)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/stats": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "description": "Endpoint to get average length statistics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returned average length statistics"
          }
        }
      }
    }
  }
}